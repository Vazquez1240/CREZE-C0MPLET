{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nclass UserData {\n  constructor() {\n    this.access_token = '';\n    this.refresh_token = '';\n    const storedAccessToken = localStorage.getItem('access_token');\n    const storedRefreshToken = localStorage.getItem('refresh_token');\n    if (storedAccessToken && storedRefreshToken) {\n      this.access_token = storedAccessToken;\n      this.refresh_token = storedRefreshToken;\n    }\n    makeAutoObservable(this);\n  }\n  setDataUser(access_token, refresh_token) {\n    this.access_token = access_token;\n    this.refresh_token = refresh_token;\n\n    // Guardar en localStorage\n    localStorage.setItem('access_token', access_token);\n    localStorage.setItem('refresh_token', refresh_token);\n  }\n  clearDataUser() {\n    this.access_token = '';\n    this.refresh_token = '';\n\n    // Limpiar el localStorage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n  }\n}\nconst useUserData = new UserData();\nexport default useUserData;","map":{"version":3,"names":["makeAutoObservable","UserData","constructor","access_token","refresh_token","storedAccessToken","localStorage","getItem","storedRefreshToken","setDataUser","setItem","clearDataUser","removeItem","useUserData"],"sources":["/home/martin/Escritorio/soporte-creze/frontend/creze-frontend/src/stores/userData.ts"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\n\nclass UserData {\n  access_token = '';\n  refresh_token = '';\n\n  constructor() {\n    const storedAccessToken = localStorage.getItem('access_token');\n    const storedRefreshToken = localStorage.getItem('refresh_token');\n\n    if (storedAccessToken && storedRefreshToken) {\n      this.access_token = storedAccessToken;\n      this.refresh_token = storedRefreshToken;\n    }\n\n    makeAutoObservable(this);\n  }\n\n  setDataUser(access_token: string, refresh_token: string): void {\n    this.access_token = access_token;\n    this.refresh_token = refresh_token;\n\n    // Guardar en localStorage\n    localStorage.setItem('access_token', access_token);\n    localStorage.setItem('refresh_token', refresh_token);\n  }\n\n  clearDataUser(): void {\n    this.access_token = '';\n    this.refresh_token = '';\n\n    // Limpiar el localStorage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n  }\n}\n\nconst useUserData = new UserData();\nexport default useUserData;\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AAEzC,MAAMC,QAAQ,CAAC;EAIbC,WAAWA,CAAA,EAAG;IAAA,KAHdC,YAAY,GAAG,EAAE;IAAA,KACjBC,aAAa,GAAG,EAAE;IAGhB,MAAMC,iBAAiB,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAC9D,MAAMC,kBAAkB,GAAGF,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAEhE,IAAIF,iBAAiB,IAAIG,kBAAkB,EAAE;MAC3C,IAAI,CAACL,YAAY,GAAGE,iBAAiB;MACrC,IAAI,CAACD,aAAa,GAAGI,kBAAkB;IACzC;IAEAR,kBAAkB,CAAC,IAAI,CAAC;EAC1B;EAEAS,WAAWA,CAACN,YAAoB,EAAEC,aAAqB,EAAQ;IAC7D,IAAI,CAACD,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,aAAa,GAAGA,aAAa;;IAElC;IACAE,YAAY,CAACI,OAAO,CAAC,cAAc,EAAEP,YAAY,CAAC;IAClDG,YAAY,CAACI,OAAO,CAAC,eAAe,EAAEN,aAAa,CAAC;EACtD;EAEAO,aAAaA,CAAA,EAAS;IACpB,IAAI,CAACR,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,aAAa,GAAG,EAAE;;IAEvB;IACAE,YAAY,CAACM,UAAU,CAAC,cAAc,CAAC;IACvCN,YAAY,CAACM,UAAU,CAAC,eAAe,CAAC;EAC1C;AACF;AAEA,MAAMC,WAAW,GAAG,IAAIZ,QAAQ,CAAC,CAAC;AAClC,eAAeY,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}